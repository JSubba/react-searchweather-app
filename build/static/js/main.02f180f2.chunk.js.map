{"version":3,"sources":["components/Content.js","components/DateTime.js","components/WeatherContainer.js","App.js","index.js"],"names":["Content","_ref","weather","react_default","a","createElement","Fragment","className","Math","round","main","temp","temp_min","temp_max","Date","sys","sunrise","toLocaleTimeString","hour","minute","sunset","src","concat","icon","alt","description","DateTime","newDate","showDate","toDateString","showTime","WeatherContainer","query","setQuery","search","type","placeholder","value","onChange","e","target","onKeyPress","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","name","country","components_Content","components_DateTime","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setWeather","cityWeather","asyncToGenerator","regenerator_default","mark","_callee","city","response","data","wrap","_context","prev","next","fetch","process","sent","json","stop","_x","apply","this","arguments","useEffect","_ref2","_callee2","_context2","key","_x2","components_WeatherContainer","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.02f180f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Content = ({ weather }) => {\r\n  return (\r\n    <>\r\n      <div className=\"city-temp\">\r\n        {Math.round(weather.main.temp)}\r\n        <sup>&deg;C</sup>\r\n        <div className=\"wrap\">\r\n          <span>\r\n            MIN:{weather.main.temp_min}\r\n            <sup>&deg;C</sup>\r\n          </span>\r\n          <span>\r\n            MAX:{weather.main.temp_max}\r\n            <sup>&deg;C</sup>\r\n          </span>\r\n        </div>\r\n        <div className=\"second-wrap\">\r\n          <span>\r\n            Sunrise:{\" \"}\r\n            {new Date(weather.sys.sunrise * 1000).toLocaleTimeString(\"en-JP\", {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}\r\n          </span>\r\n          <span>\r\n            Sunset:{\" \"}\r\n            {new Date(weather.sys.sunset * 1000).toLocaleTimeString(\"en-JP\", {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"info\">\r\n        <img\r\n          className=\"city-icon\"\r\n          src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\r\n          alt={weather.weather[0].description}\r\n        />\r\n        <p>{weather.weather[0].description}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n\r\nconst DateTime = () => {\r\n  const newDate = new Date();\r\n  const showDate = newDate.toDateString();\r\n  const showTime = newDate.toLocaleTimeString();\r\n\r\n  return (\r\n    <div className=\"date\">\r\n      <span>{showDate}</span> | <span>{showTime}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default DateTime;\r\n","import React from \"react\";\r\nimport Content from \"./Content\";\r\nimport DateTime from \"./DateTime\";\r\n\r\nconst WeatherContainer = ({ query, setQuery, search, weather }) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"search-box\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search\"\r\n          placeholder=\"Search your city weather\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          onKeyPress={search}\r\n        />\r\n        <svg\r\n          width=\"16\"\r\n          height=\"16\"\r\n          viewBox=\"0 0 42 42\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M29.8594 29.8594L39.4219 39.4219\"\r\n            stroke=\"#08c7d1\"\r\n            strokeWidth=\"4.5\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          <path\r\n            d=\"M17.9062 33.0469C26.2682 33.0469 33.0469 26.2682 33.0469 17.9062C33.0469 9.54431 26.2682 2.76562 17.9062 2.76562C9.54431 2.76562 2.76562 9.54431 2.76562 17.9062C2.76562 26.2682 9.54431 33.0469 17.9062 33.0469Z\"\r\n            stroke=\"#08c7d1\"\r\n            strokeWidth=\"4.5\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n        </svg>\r\n      </div>\r\n      {weather.main && (\r\n        <div className=\"city\">\r\n          <h2 className=\"city-name\">\r\n            <span>{weather.name}</span>\r\n            <sup>{weather.sys.country}</sup>\r\n          </h2>\r\n          <Content weather={weather} />\r\n          <DateTime />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport WeatherContainer from \"./components/WeatherContainer\";\r\n\r\nconst URL = `https://api.openweathermap.org/data/2.5/weather`;\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const cityWeather = async (city) => {\r\n    const response = await fetch(\r\n      `${URL}?q=${city}&appid=${API_KEY}&units=metric`\r\n    );\r\n    const data = await response.json();\r\n    setWeather(data);\r\n    setQuery(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    cityWeather(\"tokyo\");\r\n  }, []);\r\n\r\n  const search = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      await cityWeather(query);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <WeatherContainer\r\n      query={query}\r\n      setQuery={setQuery}\r\n      search={search}\r\n      weather={weather}\r\n    />\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}